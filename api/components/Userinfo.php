<?php
namespace api\components;


use api\models\user\User;
use yii\base\Component;
use yii\base\ErrorException;
use Yii;


use yii\db\ActiveRecord;
use yii\web\IdentityInterface;

class Userinfo  extends Component  implements IdentityInterface {

    public $model;
    public $params;
    public $token;
    public $identityClass;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub


    }


    public static function tableName(){

        return User::tableName();
    }

    public static function findIdentity($id)
    {
        return static::findOne($id);
    }


    public static function findIdentityByAccessToken($token, $type = null)
    {
        if(!$token){
            return null;
        }
        $user =User::findByToken($token);
        return $user;
    }

    /**
     * Returns an ID that can uniquely identify a user identity.
     * @return string|int an ID that uniquely identifies a user identity.
     */
    public function getId()
    {
      /*  */

       // return $this->id;
       // return $this->getPrimaryKey();
        if ($this->model) {
            return $this->model->majorKey(); // 获取主键，model里面的方法需要重写,否则会报错,这里是user的
        }
    }


    public function getAuthKey()
    {

    }

    /**
     * Validates the given auth key.
     *
     * @param string $authKey the given auth key
     * @return bool|null whether the given auth key is valid.
     * @see getAuthKey()
     */
    public function validateAuthKey($authKey)
    {

    }


    private function _getUser($token){
        if(!$token){
            return null;
        }
        $user = User::findByToken($token);

        return $user;

    }

    /**
     * 检测登录
     * @throws ApiException
     */
    public function checkLogin() {
        if (empty($this->model)) {
            throw new ErrorException(1);
        }
        if ($this->model->status == \api\models\user\User::STATUS_DISABLED) {
            throw new ErrorException(2);
        }
    }

    /**

    /**
     * @inheritdoc
     */
    public function __get($name)
    {

        return $this->model->$name;
    }

}